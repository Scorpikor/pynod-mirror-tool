# -*- coding: utf-8 -*-
# –≠—Ç–æ—Ç —Ñ–∞–π–ª —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –ø—Ä–æ–µ–∫—Ç–∞ PyNOD-Mirror-Tool
# –∞–∫—Ç—É–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é –∫–æ—Ç–æ—Ä–æ–≥–æ –º–æ–∂–Ω–æ —Å–∫–∞—á—Ç—å –ø–æ –∞–¥—Ä–µ—Å—É:
# https://github.com/Scorpikor/pynod-mirror-tool

import os
import time
import platform
import configparser
from inc.main import *
from inc.tools import *
from inc.parser import *
from inc.telegram import *
from inc.log import *

if __name__ == "__main__":
    print("\n"*3)
    start_time = time.time()                                                    # –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
    error_trigger = 0                                                           # –§–ª–∞–≥ –æ—à–∏–±–∫–∏
    error_text = []                                                             # –ü—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–æ–∫
    downloaded_size_all = 0                                                     # –°—á–µ—Ç—á–∏–∫ —Å–µ—Ç–µ–≤–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞
    downloaded_files_all = 0                                                    # –°—á–µ—Ç—á–∏–∫ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    current_directory = os.path.dirname(os.path.abspath(__file__))              # –ü—É—Ç—å, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è update.py
    log("–¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞ " + str(current_directory),2)
    os_platform,os_separator = os_dir_separator()                               # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –∑–∞–ø—É—Å–∫–∞ –∏ —Ä–µ–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–∞–ø–æ–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    config = configparser.ConfigParser()
    config.read(current_directory + os_separator +'nod32ms.conf',encoding='utf-8')
    versions_to_update = parser_config_versions_to_update(current_directory + os_separator + 'nod32ms.conf')  # —Å–ø–∏—Å–æ–∫ –≤–µ—Ä—Å–∏–π –±–∞–∑ –∞–Ω—Ç–∏–≤–∏—Ä—É—Å–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    official_servers_update = int(config.get('CONNECTION','official_servers_update'))
    connection_retry_probes = int(config.get('CONNECTION','mirror_connect_retries'))        # K–æ–ª-–≤–æ –ø–æ–ø—ã—Ç–æ–∫ —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
    max_workers = int(config.get('CONNECTION','max_workers'))
    #
    if os_platform == 'Linux':
        web_server_root = str(config.get('SCRIPT','linux_web_dir'))             # –ü—É—Ç—å –∫ –∫–æ—Ä–Ω—é –≤–µ–± —Å–µ—Ä–≤–µ—Ä–∞, –≥–¥–µ –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å –±–∞–∑—ã
    elif os_platform == 'Windows':
        web_server_root = str(config.get('SCRIPT','windows_web_dir'))
    else:
        log("–°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ. –ù–µ –ø–æ–Ω—è—Ç–Ω–æ –∫–∞–∫–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å.",4)
        log("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å–∫—Ä–∏–ø—Ç–∞....",4)
        sys.exit(1)
                                       
    prefix_config = os_separator + config.get('ESET','prefix')                                             # –ò–º—è –ø–∞–ø–∫–∏, –≤ –∫–æ—Ç–æ—Ä—É—é —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å –±–∞–∑—ã —Ä–∞–∑–Ω—ã—Ö –≤–µ—Ä—Å–∏–π –≤ –∫–æ—Ä–Ω–µ –≤–µ–± —Å–µ—Ä–≤–µ—Ä–∞
    server_user = str(config.get('CONNECTION','mirror_user'))
    server_password = str(config.get('CONNECTION','mirror_password'))
    server_timeout = int(config.get('CONNECTION','mirror_timeout'))
    
    # –í—ã–±–æ—Ä –∫–æ–Ω—Ñ–∏–≥–∞ init –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç–∏–ø–æ–º —Å–µ—Ä–≤–µ—Ä–∞
    if official_servers_update == 1:
        from inc.init_official import *
        log("–†–µ–∂–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤ (init_official.py)",1)
        oficial_servers = [value for key, value in config.items('OFFICIAL_SERVERS') if key.startswith('mirror')]
        mirror, avg_time = choosing_the_best_server(oficial_servers)
        log("–í—ã–±—Ä–∞–Ω –ª—É—á—à–∏–π –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: " + str(mirror)+ " " + str(avg_time) +" ms",2)
        mirror_server ="http://" + str(mirror)        
    else:
        from inc.init import *
        log("–†–µ–∂–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å –Ω–µ–æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –∑–µ—Ä–∫–∞–ª (init.py)",1)
        mirror_server = str(config.get('CONNECTION','mirror'))                       # –°–µ—Ä–≤–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π –±–∞–∑ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        log("–°–µ—Ä–≤–µ—Ä, —Å –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥–µ–º –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è: " + mirror_server,2)
        
    for version in versions_to_update:
        downloaded_size_version = 0                                             # –°—á–µ—Ç—á–∏–∫ —Å–µ—Ç–µ–≤–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
        downloaded_files_version = 0                                            # –°—á–µ—Ç—á–∏–∫ —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏
        
        connect_dict = {
        'os_separator': os_separator,
        'current_directory': current_directory,
        'mirror_server':mirror_server,
        'retry_probes': connection_retry_probes,
        'max_workers' : max_workers,
        'server_user': server_user,
        'server_password': server_password,
        'server_timeout': server_timeout,
        'init_environment': init(version),
        'web_server_root': web_server_root,
        'prefix_config': prefix_config,
        }
        
        result_dict = download_av_base_version (version, connect_dict)
        # =================
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á–µ—Ç—ã
        # =================
        
        # –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è
        update_date = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime())
        
        
        # –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è update.ver
        try:
            upd_ver_creation_datetime = file_creation_datetime(f"{web_server_root}{os_separator}{init_filepath_fix(os_separator,init(version)['dll'])}") 
        except:
            upd_ver_creation_datetime = None
        
        if result_dict['error'] != None:
            error_trigger = 1                                                      # —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç—Ä–∏–≥–≥–µ—Ä –æ—à–∏–±–∫–∏
            # —Å—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏
            error_string = result_dict['error_text']
            if len(error_string) > 250:
                try:
                    error_string = error_string.split('–û—à–∏–±–∫–∞:')[-1]
                except:
                    error_string = str(error_string[0:250]) + "..."
                    
            error_text.append(f"‚ùå [{version}] {error_text_fix(error_string)}")       # –ø–∏—à–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ  –æ—à–∏–±–∫–∏            
            log(f"–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –±–∞–∑ –≤–µ—Ä—Å–∏–∏ [{version}]" ,4)
            log(f"–ü—Ä–∏—á–∏–Ω–∞: {result_dict['error_text']}" ,4)
        else:
            status_text = ""
            status_text += "<code>"\
            f"‚úÖ [{version}] {result_dict['base_version']}\n"+\
            f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ : {upd_ver_creation_datetime}\n"+\
            f"–ü–æ—Å–ª–µ–¥–Ω—è—è –ø—Ä–æ–≤–µ—Ä–∫–∞   : {update_date}\n"+\
            f"–§–∞–π–ª–æ–≤ –≤ –±–∞–∑–µ –≤–µ—Ä—Å–∏–∏ : {result_dict['full_number_of_files_dir']}\n"+\
            f"–†–∞–∑–º–µ—Ä –±–∞–∑—ã          : {sizeof_fmt(result_dict['full_size_dir'])}\n"
                       
            if result_dict['retries_all'] != 0:
                status_text += f"–ü–æ–≤—Ç–æ—Ä–Ω—ã—Ö –∑–∞–≥—Ä—É–∑–æ–∫   : {result_dict['retries_all']} ‚ö†Ô∏è\n"
            
            status_text += f"–°–∫–∞—á–∞–ª–∏              : {sizeof_fmt(result_dict['downloaded_size_versionown'])}\n"
            status_text += f"–°–∫–∞—á–∞–ª–∏ —Ñ–∞–π–ª–æ–≤       : {result_dict['downloaded_files_version']}\n"
            
            status_text += "</code>"    
                
            error_text.append(status_text)
            
            
            
            
        downloaded_files_all += result_dict['downloaded_files_version']
        downloaded_size_all += result_dict['downloaded_size_versionown']
        
        log(f"{'-'*50}",2)
        log(f"–°–∫–∞—á–∞–Ω–æ —Ñ–∞–π–ª–æ–≤ –¥–ª—è –±–∞–∑—ã —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ : {result_dict['downloaded_files_version']}",2)
        log(f"–†–∞–∑–º–µ—Ä —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ —Ç–µ–∫—É—â–µ–π –≤–µ—Ä—Å–∏–∏ : {sizeof_fmt(result_dict['downloaded_size_versionown'])}",2 )
        log(f"–ö–æ–ª-–≤–æ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤ –±–∞–∑—ã —É–¥–∞–ª–µ–Ω–æ      : {result_dict['trash_files_deleted']}",2 )
        log(f"–û–±—â–µ–µ –∫–æ–ª-–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –ø–µ—Ä–µ–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª   : {result_dict['retries_all']}",2)                
        log(f"–í—Ä–µ–º—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –±–∞–∑ –≤–µ—Ä—Å–∏–∏ [{version}]: {result_dict['update_time']}" ,2)
        log(f"–ö–æ–ª-–≤–æ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ –±–∞–∑   [{version}]: {result_dict['full_number_of_files_dir']}" ,2)
        log(f"–†–∞–∑–º–µ—Ä –ø–∞–ø–∫–∏ —Å –±–∞–∑–∞–º–∏       [{version}]: {sizeof_fmt(result_dict['full_size_dir'])}" ,2)
        log(f"{'-'*50}",2)                
        print("\n"*3)
        


        
    end_time = str(convert_seconds(time.time() - start_time))
    full_base_size = (folder_size(web_server_root + prefix_config))
    log(TColor.CYAN +"-"*70 + TColor.ENDC,2)
    log(f"–í—Å–µ–≥–æ —Å–∫–∞—á–∞–Ω–æ —Ñ–∞–π–ª–æ–≤        : {downloaded_files_all}",2)
    log(f"–†–∞–∑–º–µ—Ä –≤—Å–µ—Ö —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {sizeof_fmt(downloaded_size_all)}",2)
    log(f"–ü–æ–ª–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤—Å–µ—Ö –±–∞–∑ {web_server_root + prefix_config} : {sizeof_fmt(full_base_size)}",2)
    log(f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞: {end_time}" ,2)
    log(TColor.CYAN +"-"*70 + TColor.ENDC,2)
    print()
    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º
    if str(config.get('TELEGRAM','telegram_inform')) == "1":    
        info = ""
        token = config.get('TELEGRAM','token')
        chat_id = config.get('TELEGRAM','chat_id')
        if error_trigger == 0:
            msg_prefix = "‚úÖ"
        else:
            msg_prefix = "üÜò"
            
        for txt in error_text:
            info +=f"{txt}\n"
                
        info += '<code>'+'-'*43 + "\n"
        info += f"–í—Å–µ–≥–æ —Å–∫–∞—á–∞–Ω–æ —Ñ–∞–π–ª–æ–≤        : {downloaded_files_all}\n"
        info += f"–†–∞–∑–º–µ—Ä –≤—Å–µ—Ö —Å–∫–∞—á–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤: {sizeof_fmt(downloaded_size_all)}\n"
        info += f"–ü–æ–ª–Ω—ã–π —Ä–∞–∑–º–µ—Ä –≤—Å–µ—Ö –±–∞–∑      : {sizeof_fmt(full_base_size)}\n"
        info += f"–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞    : {end_time}\n"
        info += "</code>\n"
        send_msg(f"{msg_prefix} {update_date} –°–µ—Ä–≤–µ—Ä: {os.uname()[1]} \n\n {info}", token, chat_id)
        
    