
map $http_user_agent $ver {
        "~^.*(EEA|EES|EFSW|EMSX|ESFW)+\s+Update.*BPC\s+(\d+)\..*$" "ep$2";
        "~^.*Update.*BPC\s+(\d+)\..*$" "v$1";
}


server {

        listen [::]:80;
        listen      80;
        root /var/www/nod32mirror;
        server_name _;
        index index.html;
        
	# Доп. заголовки
	add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive";
	add_header Cache-Control "no-cache, public, must-revalidate";
	real_ip_header X-Real-IP;
	real_ip_recursive on;

        location = /index.html {
	root $root_path;          # Устанавливаем начальный root
        try_files $uri =404;      # Ищем index.html в этом каталоге
        }

	# Логика для update.ver
        location ~* \.ver$ {
                if ($ver ~ "^ep[6-9]$")  {rewrite ^/(dll/)?update.ver$ /eset_upd/$ver/$1update.ver break;}
                if ($ver ~ "^ep1[0-9]$") {rewrite ^/(dll/)?update.ver$ /eset_upd/$ver/$1update.ver break;}
                if ($ver ~ "^v[3-8]$")   {rewrite ^(.*) /eset_upd/v3/dll/update.ver break;}
                if ($ver ~ "^v1[0-1]$")  {rewrite ^(.*) /eset_upd/v10/dll/update.ver break;}
                if ($ver ~ "^v1[2-9]$")  {rewrite ^(.*) /eset_upd/$ver/dll/update.ver break;}
        }

        # Логика для "остальных файлов"
        location / {
                set $ver_path $ver;

                if ($ver ~ "^v[3-8]$") {
                set $ver_path v3;
                }
                if ($ver ~ "^v1[0-1]$") {
                set $ver_path v10;
                }
		
                root $root_path/data/$ver_path;
                try_files $uri $uri/ =404;
                }

        access_log /var/log/nginx/error_nod32mirror.log;
        #error_log /var/log/nginx/error_nod32mirror.log debug;
        error_log /var/log/nginx/error_nod32mirror.log;

}
